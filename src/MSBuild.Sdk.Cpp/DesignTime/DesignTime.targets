<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <PropertyGroup>
        <MSBuildAllProjects Condition=" '$(MSBuildVersion)' == '' Or '$(MSBuildVersion)' &lt; '16.0' ">$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
    </PropertyGroup>

    <PropertyGroup>
        <XamlProjectSystemRulesDirectory>$(MSBuildThisFileDirectory)Rules\</XamlProjectSystemRulesDirectory>
    </PropertyGroup>

    <PropertyGroup>
        <!-- Turn off capabilities from Microsoft.Common.CurrentVersions.targets and explicitly include the ones we want.  -->
        <!-- Consider setting _ImportMicrosoftCppDesignTime to true to turn off built-in VC design time targets-->
        <DefineCommonItemSchemas>false</DefineCommonItemSchemas>
        <DefineCommonCapabilities>false</DefineCommonCapabilities>
        <DefineCommonReferenceSchemas>false</DefineCommonReferenceSchemas>

        <DefineCommonNativeCapabilities Condition=" '$(DefineCommonNativeCapabilities)' == '' ">true</DefineCommonNativeCapabilities>
        <DefineCommonNativeItemSchemas Condition=" '$(DefineCommonNativeItemSchemas)' == '' ">true</DefineCommonNativeItemSchemas>
        <DefineCommonNativeReferenceSchemas Condition=" '$(DefineCommonNativeReferenceSchemas)' == '' ">true</DefineCommonNativeReferenceSchemas>

        <LanguageServiceName Condition="'$(LanguageServiceName)' == ''">C++</LanguageServiceName>
        <LanguageServiceId Condition="'$(LanguageServiceId)'==''">{B2F072B0-ABC1-11D0-9D62-00C04FD9DFD9}</LanguageServiceId>

        <!--This property sets the default output types supported by the project system.-->
        <SupportedOutputTypes Condition="'$(SupportedOutputTypes)' == ''">Exe;WinExe;Library</SupportedOutputTypes>

        <SuppressOutOfDateMessageOnBuild Condition="'$(SuppressOutOfDateMessageOnBuild)' == ''">true</SuppressOutOfDateMessageOnBuild>

    </PropertyGroup>

    <ItemGroup Condition="'$(DefineCommonNativeCapabilities)' == 'true'">
        <!-- C++ specific -->
        <ProjectCapability Include="VisualC" />
        <ProjectCapability Include="ProjectConfigurationsDeclaredAsItems" />

        <ProjectCapability Include="WindowsAppContainer" Condition="'$(WindowsAppContainer)' == 'true'"/>
        
        <ProjectCapability Include="CPS" />
        <ProjectCapability Include="UseFileGlobs"/>
        <ProjectCapability Include="DynamicDependentFile"/>

        <!-- DependenciesTree capability lights up a Dependencies tree node and it's sub node providers-->
        <ProjectCapability Include="DependenciesTree" />
        <ProjectCapability Include="LaunchProfiles" />
        <ProjectCapability Include="NoGeneralDependentFileIcon"/>
        <!--
          List of capabilities below is adding back common capabilities defined in imported targets.
          We disabled them with the property DefineCommonCapabilities=false to get rid of default
          References capability, but everything else we want back.
          NuGet requires AssemblyReferences + DeclaredSourceItems + UserSourceItems
        -->
        <ProjectCapability Include="
                            AssemblyReferences;
                            COMReferences;
                            ProjectReferences;
                            PackageReferences;
                            SharedProjectReferences;
                            WinRTReferences;
                            OutputGroups;
                            AllTargetOutputGroups;
                            VisualStudioWellKnownOutputGroups;
                            SingleFileGenerators;
                            DeclaredSourceItems;
                            UserSourceItems;
                            SupportAvailableItemName;" />

        <!-- Reference Manager capabilities -->
        <ProjectCapability Include="ReferenceManagerAssemblies" />
        <ProjectCapability Include="ReferenceManagerBrowse" />
        <ProjectCapability Include="ReferenceManagerCOM" />
        <ProjectCapability Include="ReferenceManagerProjects" />
        <ProjectCapability Include="ReferenceManagerSharedProjects" />
        <ProjectCapability Include="ReferenceManagerWinRT" />

    </ItemGroup>
    
    <ItemGroup>
        <!-- Xaml item types -->
        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)Default.ProjectItemsSchema.xaml">
            <Context>Project</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)Cpp.ProjectItemsSchema.xaml">
            <Context>Project</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)Xaml.ProjectItemsSchema.xaml">
            <Context>Project</Context>
        </PropertyPageSchema>
        
        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)Appx.ProjectItemsSchema.xaml">
            <Context>Project</Context>
        </PropertyPageSchema>
    </ItemGroup>
    
    <!-- Common Project System rules that override rules defined in msbuild. These are exact copy of the rules defined in msbuild. -->
    <ItemGroup>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)ApplicationDefinition.xaml">
            <Context>File</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)ApplicationDefinition.BrowseObject.xaml">
            <Context>BrowseObject</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)Compile.xaml;">
            <Context>File</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)Compile.BrowseObject.xaml;">
            <Context>BrowseObject</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)Content.xaml">
            <Context>File</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)Content.BrowseObject.xaml">
            <Context>BrowseObject</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)Folder.xaml">
            <Context>File;BrowseObject</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)None.xaml">
            <Context>File</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)None.BrowseObject.xaml">
            <Context>BrowseObject</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)Page.xaml">
            <Context>File</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)Page.BrowseObject.xaml">
            <Context>BrowseObject</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)SpecialFolder.xaml">
            <Context>File;ProjectSubscriptionService</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)CompilerCommandLineArgs.xaml">
            <Context>ProjectSubscriptionService</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)LanguageService.xaml">
            <Context>ProjectSubscriptionService</Context>
        </PropertyPageSchema>

        <!-- NuGet Restore Properties -->
        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)NuGetRestore.xaml">
            <Context>ProjectSubscriptionService</Context>
        </PropertyPageSchema>

        <!-- Up-to-date check -->
        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)ResolvedCompilationReference.xaml">
            <Context>ProjectSubscriptionService</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)CopyUpToDateMarker.xaml">
            <Context>ProjectSubscriptionService</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)UpToDateCheckInput.xaml">
            <Context>ProjectSubscriptionService</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)UpToDateCheckOutput.xaml">
            <Context>ProjectSubscriptionService</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)UpToDateCheckBuilt.xaml">
            <Context>ProjectSubscriptionService</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)ConfigurationGeneral.xaml">
            <Context>Project;ProjectSubscriptionService</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)DebuggerGeneral.xaml">
            <Context>Project</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)GeneralBrowseObject.xaml">
            <Context>BrowseObject</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)GeneralConfiguredBrowseObject.xaml">
            <Context>ConfiguredBrowseObject</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)ProjectDebugger.xaml">
            <Context>Project</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)SourceControl.xaml">
            <Context>Invisible</Context>
        </PropertyPageSchema>

    </ItemGroup>

    <ItemGroup>
        <!-- Assembly references -->
        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)AssemblyReference.xaml">
            <Context>Project;BrowseObject</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)ResolvedAssemblyReference.xaml">
            <Context>ProjectSubscriptionService;BrowseObject</Context>
        </PropertyPageSchema>

        <!-- COM references -->
        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)COMReference.xaml">
            <Context>Project;BrowseObject</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)ResolvedCOMReference.xaml">
            <Context>ProjectSubscriptionService;BrowseObject</Context>
        </PropertyPageSchema>

        <!-- Project references -->
        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)ProjectReference.xaml">
            <Context>Project;BrowseObject</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)ResolvedProjectReference.xaml">
            <Context>ProjectSubscriptionService;BrowseObject</Context>
        </PropertyPageSchema>

        <!-- Sdk references -->
        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)SdkReference.xaml">
            <Context>Project;ProjectSubscriptionService;BrowseObject</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)ResolvedSdkReference.xaml">
            <Context>ProjectSubscriptionService;BrowseObject</Context>
        </PropertyPageSchema>

        <!-- Package references -->
        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)PackageReference.xaml">
            <Context>ProjectSubscriptionService;BrowseObject</Context>
        </PropertyPageSchema>

        <PropertyPageSchema Include="$(XamlProjectSystemRulesDirectory)ResolvedPackageReference.xaml">
            <Context>ProjectSubscriptionService;BrowseObject</Context>
        </PropertyPageSchema>

    </ItemGroup>

    <!-- List of external files that trigger design-time builds when they are modified -->
    <ItemGroup>
        <AdditionalDesignTimeBuildInput Include="$(ProjectAssetsFile)" />
        <!-- NuGet assets file -->
    </ItemGroup>

    <!-- Targets -->

    <!-- For a newly created project with no packages restored, Design time build complains that there is no ResolvePackageDependenciesDesignTime
       target, that is available only after restoring the .Net Core SDK targets. This No-op target will satisfy the check and will get overriden
       once the actual targets are available after package restore-->
    <Target Name="ResolvePackageDependenciesDesignTime" />
    <Target Name="CollectSDKReferencesDesignTime" />
    <Target Name="CollectResolvedSDKReferencesDesignTime" />

    <Target Name="CompileDesignTime"  />

    <!-- This target collects all the resolved references that are used to actually compile. -->
    <Target Name="CollectResolvedCompilationReferencesDesignTime" DependsOnTargets="CompileDesignTime" Returns="@(ReferencePathWithRefAssemblies)" />

    <!-- This target collects all the extra inputs for the up to date check. -->
    <Target Name="CollectUpToDateCheckInputDesignTime" DependsOnTargets="CompileDesignTime" Returns="@(UpToDateCheckInput)">
        <ItemGroup>
            <!-- MSBuild additional compile file, such as the file input cache file -->
            <UpToDateCheckInput Include="@(CustomAdditionalCompileInputs)"/>
        </ItemGroup>
    </Target>

    <!-- This target collects all the extra inputs for the up to date check. -->
    <Target Name="CollectUpToDateCheckOutputDesignTime" DependsOnTargets="CompileDesignTime" Returns="@(UpToDateCheckOutput)" />

    <!-- This target collects all the things built by the project for the up to date check. -->
    <!-- See CopyFileToOutputDirectory target -->
    <Target Name="CollectUpToDateCheckBuiltDesignTime" DependsOnTargets="CompileDesignTime" Returns="@(UpToDateCheckBuilt)">
        <ItemGroup>
            <!-- Assembly output, bin and obj -->
            <UpToDateCheckBuilt Condition="'$(CopyBuildOutputToOutputDirectory)' != 'false' and '$(SkipCopyBuildProduct)' != 'true'" Include="$(TargetPath)"/>
            <UpToDateCheckBuilt Include="@(IntermediateAssembly)"/>
        </ItemGroup>
    </Target>

</Project>
